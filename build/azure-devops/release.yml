trigger: 
- main
pr: none

name: 1.0$(Rev:.r)

variables:
- group: azdevops-lambda-hook-globals
- group: azdevops-lambda-hook-prod

stages:
- template: templates/stage-build-and-publish-lambdas.yml
  parameters:
    stageName: BuildAndPublish

- template: templates/stage-validate-cloudformation-templates.yml
  parameters:
    stageName: AWSCFValidate

- stage: AWSCFSeedLambdas
  displayName: "Seed Lambdas"
  dependsOn: ['BuildAndPublish', 'AWSCFValidate']
  jobs:
  - job: SeedLambdas
    displayName: Seed Lambdas
    pool:
      vmImage: windows-2019

    steps:
    - task: DownloadPipelineArtifact@2
      displayName: "Download azdev-adapter-webhook"
      inputs:
        source: current
        artifact: azdev-adapter-webhook
        path: $(Pipeline.Workspace)/Input/azdev-adapter-webhook

    # We could be smart about this and only copy the Lambda zip if it does not exist, but...
    # AWS will only update the Lambda code when update-function-code is called. So this is harmless without smarts. And we need the Zip around to create the Stack for the first time.
    - task: AmazonWebServices.aws-vsts-tools.AWSCLI.AWSCLI@1
      displayName: 'cp azdev-adapter-webhook'
      inputs:
        awsCredentials: 'cloudformation.ap-southeast-2.amazonaws.com'      
        regionName: 'ap-southeast-2'
        awsCommand: s3
        awsSubCommand: cp
        awsArguments: $(Pipeline.Workspace)/Input/azdev-adapter-webhook/azdev-adapter-webhook.zip s3://$(TurkanaS3BucketNameParameter)/private/$(TurkanaEnvironmentParameter)/azdev-adapter-webhook/azdev-adapter-webhook.zip
        failOnStandardError: true      

- template: templates/stage-deploy-stacks-for-environment.yml
  parameters:
    stageName: AWSCFStacksDeploy
    environmentName: prod
    dependsOnStage: AWSCFSeedLambdas

- stage: AWSCFLambdasDeploy
  displayName: "Deploy Lambdas"
  dependsOn: ['AWSCFStacksDeploy']
  jobs:
  - job: DeployLambdas
    displayName: Deploy Lambdas
    pool:
      vmImage: windows-2019

    steps:
    - task: DownloadPipelineArtifact@2
      displayName: "Download azdev-adapter-webhook"
      inputs:
        source: current
        artifact: azdev-adapter-webhook
        path: $(Pipeline.Workspace)/Input/azdev-adapter-webhook

    - task: AmazonWebServices.aws-vsts-tools.AWSCLI.AWSCLI@1
      displayName: 'update azdev-adapter-webhook'
      inputs:
        awsCredentials: 'cloudformation.ap-southeast-2.amazonaws.com'      
        regionName: 'ap-southeast-2'
        awsCommand: lambda
        awsSubCommand: update-function-code
        awsArguments: --function-name turkana-$(TurkanaEnvironmentParameter)-prod-azdev-adapter-webhook --zip-file fileb://$(Pipeline.Workspace)/Input/azdev-adapter-webhook/azdev-adapter-webhook.zip
        failOnStandardError: true
